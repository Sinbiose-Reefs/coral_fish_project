
    
    model{
    
    ## priors 
    for (k in 1:nspec) {
    # CAR prior distribution for spatial random effects:
    rho[k,1:nsite] ~ car.normal(adj[], weights[], num[], spacetau[k])
    # hyperprior of rho 
    spacesigma[k] ~ dunif(0,5)
    spacetau[k]  <- 1/(spacesigma[k]*spacesigma[k])
    }
    
    
    # regression parameters
    for (k in 1:nspec) {
       b0[k] ~ dnorm(mu.int,tau.mu)
       ## detection probability
       mu.p[k] ~ dnorm(p.int,tau.p)
      }
   
    mu.int ~ dnorm(0, 0.001)
    tau.mu <- 1/(sigma.int*sigma.int)
    sigma.int ~ dunif(0,10)
    p.int ~ dnorm(0, 0.001)
    tau.p <- 1/(sigma.p*sigma.p)
    sigma.p ~ dunif(0,10)
    
    ## likelihood
    for (k in 1:nspec) { # for each species
       logit(p[k]) <- mu.p[k]

       for(i in 1:nsite) { # for each site
          ## occupancy model
          z [i,k] ~ dbern (psi[i,k])
    
          mu[i,k] <- b0[k] + rho[k,i]
          mu.lim[i,k] <- min(10,max(-10,mu[i,k]))
          logit(psi[i,k]) <- mu.lim[i,k]
    
          ## observation model 
          C[i,k] ~ dbin(p.eff[i,k],N[i])
          p.eff[i,k] <- p[k] * z[i,k]
    
        }## close site loop
    } ## close species loop
    
    # Assess model fit using a sums-of-squares-type discrepancy
    for (k in 1:nspec) {
    for (i in 1:nsite) {
    residual[i,k] <- C[i,k]-psi[i,k] # Residuals for observed data
    predicted[i,k] <- psi[i,k] # Predicted values
    sq[i,k] <- pow(residual[i,k], 2) # Squared residuals for observed data
    
    # Generate replicate data and compute fit stats for them
    C.new[i,k] ~ dbin(p.eff[i,k],N[i]) # one new data set at each MCMC iteration
    sq.new[i,k] <- pow(C.new[i,k]-predicted[i,k], 2) # Squared residuals for new data
    }
    fit[k] <- sum(sq[,k]) # Sum of squared residuals for actual data set
    fit.new[k] <- sum(sq.new[,k]) # Sum of squared residuals for new data set
    test[k] <- step(fit.new[k] - fit[k]) # Test whether new data set more extreme
    bpvalue[k] <- mean(test[k]) # Bayesian p-value
    }
    
    # Derived parameters
    # number of species per site (finite sample size)
    for (i in 1:nsite) {
    n.occ [i] <- sum(z[i,]) 
    mutot [i] <- sum(psi[i,])
    }
    
    # number of sites per species 
    for (k in 1:nspec) {
    n.spp[k] <- sum(z[,k])
    n.spp.mu[k] <- sum(psi[,k])
    }
    
    # mean detection probabability
    meanP <- mean(p[])
    meanPsi <- mean(psi[,])
    meanZ <- mean(z[,])
    }
    
