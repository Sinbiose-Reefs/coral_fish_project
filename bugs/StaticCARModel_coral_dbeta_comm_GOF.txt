

model{

    ## priors 
    # CAR prior distribution for spatial random effects:
    for (k in 1:nspec) {
       rho[k,1:nsite] ~ car.normal(adj[], weights[], num[], spacetau[k])
       # hyperprior of rho 
       spacesigma[k] ~ dunif(0,5)
       spacetau[k]  <- 1/(spacesigma[k]*spacesigma[k])
    }
    

    # hyperprior of rho 
    
    # regression parameters
    for (k in 1:nspec) {
       b0 [k]~ dnorm(0,1.0E-2)
       c0 [k]~ dnorm(0,1.0E-2)
       c1 [k]~ dnorm(0,1.0E-2)
    }

   ## likelihood
   for(k in 1:nspec) {
      for(i in 1:nsite) {
   
         ## cover dataset 
         C[i,k] ~ dbeta(p[i,k],q[i,k])
         p[i,k] <- mu[i,k]*phi[i,k]
         q[i,k] <- (1-mu[i,k])*phi[i,k]  # phi[i,k]-mu[i,k]*phi[i,k]
         ## or an alternative parameterization: phi[i]-mu.s[i]*phi[i]

         # model for average cover
         mu0[i,k]<- b0[k] + rho[k,i]
         mu.lim[i,k] <- min(10,max(-10,mu0[i,k]))
         logit(mu[i,k]) <- mu.lim[i,k]

         # precision model
         phi[i,k] <- exp(c0[k] + c1[k]*nvideos[i])

         } ## close site loop
      } ## close spp loop

    # Assess model fit using a sums-of-squares-type discrepancy
    #for (k in 1:nspec) {
    #   for (i in 1:nsite) {
    #      residual[i,k] <- C[i,k]-p[i,k] # Residuals for observed data
    #      predicted[i,k] <- p[i,k] # Predicted values
    #      sq[i,k] <- pow(residual[i,k], 2) # Squared residuals for observed data
    
    #      # Generate replicate data and compute fit stats for them
    #      C.new[i,k] ~ dbeta(mu[i,k],q[i,k]) # one new data set at each MCMC iteration
    #      sq.new[i,k] <- pow(C.new[i,k]-predicted[i,k], 2) # Squared residuals for new data
    #   }

    #   fit[k] <- sum(sq[,k]) # Sum of squared residuals for actual data set
    #   fit.new[k] <- sum(sq.new[,k]) # Sum of squared residuals for new data set
    #   test[k] <- step(fit.new[k] - fit[k]) # Test whether new data set more extreme
    #   bpvalue[k] <- mean(test[k]) # Bayesian p-value
    #}

  # derived parameters
  # MEAN COVER per species
  for (k in 1:nspec) {
     meanCov [k] <- mean(p[,k]) 
  }

  # total cover per site
  for (i in 1:nsite) {
     totCov [i] <- sum(p[i,]) 
  }
  
  # MEAN COVER per species (mu)
  for (k in 1:nspec) {
    meanCovmu [k] <- mean(mu[,k]) 
  }

  # total cover per site (considering mu)
  for (i in 1:nsite) {
    totCovmu [i] <- sum(mu[i,]) 
  }

}
  
